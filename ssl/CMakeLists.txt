# SPDX-License-Identifier: Unlicense

set(LIBSSL_SOURCES
    ${CMAKE_SOURCE_DIR}/openssl/ssl/pqueue.c
    ${CMAKE_SOURCE_DIR}/openssl/ssl/packet.c
    ${CMAKE_SOURCE_DIR}/openssl/ssl/statem/statem_srvr.c
    ${CMAKE_SOURCE_DIR}/openssl/ssl/statem/statem_clnt.c
    ${CMAKE_SOURCE_DIR}/openssl/ssl/s3_lib.c
    ${CMAKE_SOURCE_DIR}/openssl/ssl/s3_enc.c
    ${CMAKE_SOURCE_DIR}/openssl/ssl/record/rec_layer_s3.c
    ${CMAKE_SOURCE_DIR}/openssl/ssl/statem/statem_lib.c
    ${CMAKE_SOURCE_DIR}/openssl/ssl/statem/extensions.c
    ${CMAKE_SOURCE_DIR}/openssl/ssl/statem/extensions_srvr.c
    ${CMAKE_SOURCE_DIR}/openssl/ssl/statem/extensions_clnt.c
    ${CMAKE_SOURCE_DIR}/openssl/ssl/statem/extensions_cust.c
    ${CMAKE_SOURCE_DIR}/openssl/ssl/s3_cbc.c
    ${CMAKE_SOURCE_DIR}/openssl/ssl/s3_msg.c
    ${CMAKE_SOURCE_DIR}/openssl/ssl/methods.c
    ${CMAKE_SOURCE_DIR}/openssl/ssl/t1_lib.c
    ${CMAKE_SOURCE_DIR}/openssl/ssl/t1_enc.c
    ${CMAKE_SOURCE_DIR}/openssl/ssl/tls13_enc.c
    ${CMAKE_SOURCE_DIR}/openssl/ssl/d1_lib.c
    ${CMAKE_SOURCE_DIR}/openssl/ssl/record/rec_layer_d1.c
    ${CMAKE_SOURCE_DIR}/openssl/ssl/d1_msg.c
    ${CMAKE_SOURCE_DIR}/openssl/ssl/statem/statem_dtls.c
    ${CMAKE_SOURCE_DIR}/openssl/ssl/d1_srtp.c
    ${CMAKE_SOURCE_DIR}/openssl/ssl/ssl_lib.c
    ${CMAKE_SOURCE_DIR}/openssl/ssl/ssl_cert.c
    ${CMAKE_SOURCE_DIR}/openssl/ssl/ssl_sess.c
    ${CMAKE_SOURCE_DIR}/openssl/ssl/ssl_ciph.c
    ${CMAKE_SOURCE_DIR}/openssl/ssl/ssl_stat.c
    ${CMAKE_SOURCE_DIR}/openssl/ssl/ssl_rsa.c
    ${CMAKE_SOURCE_DIR}/openssl/ssl/ssl_asn1.c
    ${CMAKE_SOURCE_DIR}/openssl/ssl/ssl_txt.c
    ${CMAKE_SOURCE_DIR}/openssl/ssl/ssl_init.c
    ${CMAKE_SOURCE_DIR}/openssl/ssl/ssl_conf.c
    ${CMAKE_SOURCE_DIR}/openssl/ssl/ssl_mcnf.c
    ${CMAKE_SOURCE_DIR}/openssl/ssl/bio_ssl.c
    ${CMAKE_SOURCE_DIR}/openssl/ssl/ssl_err.c
    ${CMAKE_SOURCE_DIR}/openssl/ssl/tls_srp.c
    ${CMAKE_SOURCE_DIR}/openssl/ssl/t1_trce.c
    ${CMAKE_SOURCE_DIR}/openssl/ssl/ssl_utst.c
    ${CMAKE_SOURCE_DIR}/openssl/ssl/record/ssl3_buffer.c
    ${CMAKE_SOURCE_DIR}/openssl/ssl/record/ssl3_record.c
    ${CMAKE_SOURCE_DIR}/openssl/ssl/record/dtls1_bitmap.c
    ${CMAKE_SOURCE_DIR}/openssl/ssl/statem/statem.c
    ${CMAKE_SOURCE_DIR}/openssl/ssl/record/ssl3_record_tls13.c
    ${CMAKE_SOURCE_DIR}/openssl/ssl/packet_local.h
    ${CMAKE_SOURCE_DIR}/openssl/ssl/ssl_cert_table.h
    ${CMAKE_SOURCE_DIR}/openssl/ssl/ssl_local.h
    ${CMAKE_SOURCE_DIR}/openssl/ssl/record/record_local.h
    ${CMAKE_SOURCE_DIR}/openssl/ssl/statem/statem_local.h
    ${CMAKE_SOURCE_DIR}/openssl/include/openssl/asn1t.h
    ${CMAKE_SOURCE_DIR}/openssl/include/openssl/async.h
    ${CMAKE_SOURCE_DIR}/openssl/include/openssl/bio.h
    ${CMAKE_SOURCE_DIR}/openssl/include/openssl/bn.h
    ${CMAKE_SOURCE_DIR}/openssl/include/openssl/buffer.h
    ${CMAKE_SOURCE_DIR}/openssl/include/openssl/comp.h
    ${CMAKE_SOURCE_DIR}/openssl/include/openssl/conf.h
    ${CMAKE_SOURCE_DIR}/openssl/include/openssl/crypto.h
    ${CMAKE_SOURCE_DIR}/openssl/include/openssl/ct.h
    ${CMAKE_SOURCE_DIR}/openssl/include/openssl/dh.h
    ${CMAKE_SOURCE_DIR}/openssl/include/openssl/dsa.h
    ${CMAKE_SOURCE_DIR}/openssl/include/openssl/e_os2.h
    ${CMAKE_SOURCE_DIR}/openssl/include/openssl/engine.h
    ${CMAKE_SOURCE_DIR}/openssl/include/openssl/err.h
    ${CMAKE_SOURCE_DIR}/openssl/include/openssl/evp.h
    ${CMAKE_SOURCE_DIR}/openssl/include/openssl/hmac.h
    ${CMAKE_SOURCE_DIR}/openssl/include/openssl/kdf.h
    ${CMAKE_SOURCE_DIR}/openssl/include/openssl/md5.h
    ${CMAKE_SOURCE_DIR}/openssl/include/openssl/objects.h
    ${CMAKE_SOURCE_DIR}/openssl/include/openssl/ocsp.h
    ${CMAKE_SOURCE_DIR}/openssl/include/openssl/pem.h
    ${CMAKE_SOURCE_DIR}/openssl/include/openssl/rand.h
    ${CMAKE_SOURCE_DIR}/openssl/include/openssl/rand_drbg.h
    ${CMAKE_SOURCE_DIR}/openssl/include/openssl/rsa.h
    ${CMAKE_SOURCE_DIR}/openssl/include/openssl/sha.h
    ${CMAKE_SOURCE_DIR}/openssl/include/openssl/srp.h
    ${CMAKE_SOURCE_DIR}/openssl/include/openssl/ssl.h
    ${CMAKE_SOURCE_DIR}/openssl/include/openssl/sslerr.h
    ${CMAKE_SOURCE_DIR}/openssl/include/openssl/symhacks.h
    ${CMAKE_SOURCE_DIR}/openssl/include/openssl/x509.h
    ${CMAKE_SOURCE_DIR}/openssl/include/openssl/x509v3.h
    ${CMAKE_SOURCE_DIR}/openssl/include/internal/cryptlib.h
)
if (WIN32)
    configure_file(ssl.rc.cmake.in ssl.rc @ONLY)
    set(LIBSSL_SOURCES ${LIBSSL_SOURCES} ssl.rc)
    if (OPENSSL_TARGET_ARCH STREQUAL x64)
        set(LIBSSL_RUNTIME_OUTPUT_NAME libssl-1_1-x64)
    else()
        set(LIBSSL_RUNTIME_OUTPUT_NAME libssl-1_1)
    endif()

    add_custom_command(
        OUTPUT ssl.def
        COMMAND "${CMAKE_COMMAND}" -DNUMFILE="${CMAKE_SOURCE_DIR}/openssl/util/libssl.num" -DLIBRARY_FILE="${LIBSSL_RUNTIME_OUTPUT_NAME}" -DBINARY_DIR="${CMAKE_BINARY_DIR}" -DOUTPUT_FILE="${CMAKE_CURRENT_BINARY_DIR}/ssl.def" -DPLATFORM=_WIN32 -P "${CMAKE_CURRENT_SOURCE_DIR}/../crypto/mkdef.cmake"
        MAIN_DEPENDENCY "${CMAKE_SOURCE_DIR}/openssl/util/libssl.num"
        DEPENDS ../crypto/mkdef.cmake
    )
    set(LIBSSL_SOURCES ${LIBSSL_SOURCES} ssl.def)
endif()
add_library(ssl
    ${LIBSSL_SOURCES}
)
if (WIN32)
    set_target_properties(ssl PROPERTIES
        RUNTIME_OUTPUT_NAME "${LIBSSL_RUNTIME_OUTPUT_NAME}"
    )
    if (MSVC)
        set_target_properties(ssl PROPERTIES
            ARCHIVE_OUTPUT_NAME libssl
        )
    endif()
elseif ( ( CMAKE_C_COMPILER_ID MATCHES "GNU" OR CMAKE_C_COMPILER_ID MATCHES "[Cc]lang" ) AND NOT APPLE AND NOT ( CMAKE_SYSTEM_NAME MATCHES "SunOS") )
    add_custom_command(
        OUTPUT ssl.map
        COMMAND "${CMAKE_COMMAND}" -DNUMFILE="${CMAKE_SOURCE_DIR}/openssl/util/libssl.num" -DLIBRARY_FILE="${LIBCRYPTO_RUNTIME_OUTPUT_NAME}" -DBINARY_DIR="${CMAKE_BINARY_DIR}" -DOUTPUT_FILE="${CMAKE_CURRENT_BINARY_DIR}/ssl.map" -DPLATFORM=ELF -P "${CMAKE_CURRENT_SOURCE_DIR}/../crypto/mkdef.cmake"
        MAIN_DEPENDENCY "${CMAKE_SOURCE_DIR}/openssl/util/libssl.num"
        DEPENDS ../crypto/mkdef.cmake
    )
    add_custom_target(ssl_map SOURCES ssl.map)
    add_dependencies(ssl ssl_map)
    target_link_options(ssl PRIVATE "LINKER:--version-script=${CMAKE_CURRENT_BINARY_DIR}/ssl.map")
endif()
set_target_properties(ssl PROPERTIES
    SOVERSION 1.1
    VERSION ${OPENSSL_VERSION_REAL}
)

target_include_directories(ssl
    PUBLIC ${CMAKE_BINARY_DIR}/include
           ${CMAKE_CURRENT_BINARY_DIR}
           ${CMAKE_SOURCE_DIR}/openssl
           ${CMAKE_SOURCE_DIR}/openssl/ssl
           ${CMAKE_SOURCE_DIR}/openssl/crypto
           ${CMAKE_SOURCE_DIR}/openssl/include
)

target_link_libraries(ssl
    PUBLIC crypto
)

get_target_property(LIBCRYPTO_CFLAGS crypto COMPILE_DEFINITIONS)

target_compile_definitions(ssl
    PRIVATE ${LIBCRYPTO_CFLAGS}
)

install(TARGETS ssl
    RUNTIME
    LIBRARY
    ARCHIVE
)
