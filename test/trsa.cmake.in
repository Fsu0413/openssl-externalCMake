execute_process(COMMAND @CMAKE_BINARY_DIR@/apps/openssl no-rsa
                WORKING_DIRECTORY @CMAKE_CURRENT_BINARY_DIR@
                RESULT_VARIABLE NO_RSA_VAR
)

if (NO_RSA_VAR EQUAL 0)
    message(NOTICE "skipping rsa conversion test")
else()
    message(NOTICE "testing rsa conversions")
    execute_process(COMMAND @CMAKE_COMMAND@ -E copy @CMAKE_SOURCE_DIR@/openssl/test/testrsa.pem @CMAKE_CURRENT_BINARY_DIR@/rsa-fff.p
                    WORKING_DIRECTORY @CMAKE_CURRENT_BINARY_DIR@
                    COMMAND_ERROR_IS_FATAL ANY
    )

    message(NOTICE "p -> d")
    execute_process(COMMAND @CMAKE_BINARY_DIR@/apps/openssl rsa -in rsa-fff.p -inform p -outform d
                    WORKING_DIRECTORY @CMAKE_CURRENT_BINARY_DIR@
                    OUTPUT_FILE rsa-f.d
                    COMMAND_ERROR_IS_FATAL ANY
    )

    # p -> t

    message(NOTICE "p -> p")
    execute_process(COMMAND @CMAKE_BINARY_DIR@/apps/openssl rsa -in rsa-fff.p -inform p -outform p
                    WORKING_DIRECTORY @CMAKE_CURRENT_BINARY_DIR@
                    OUTPUT_FILE rsa-f.p
                    COMMAND_ERROR_IS_FATAL ANY
    )

    message(NOTICE "d -> d")
    execute_process(COMMAND @CMAKE_BINARY_DIR@/apps/openssl rsa -in rsa-f.d -inform d -outform d
                    WORKING_DIRECTORY @CMAKE_CURRENT_BINARY_DIR@
                    OUTPUT_FILE rsa-ff.d1
                    COMMAND_ERROR_IS_FATAL ANY
    )

    # t -> d

    message(NOTICE "p -> d")
    execute_process(COMMAND @CMAKE_BINARY_DIR@/apps/openssl rsa -in rsa-f.p -inform p -outform d
                    WORKING_DIRECTORY @CMAKE_CURRENT_BINARY_DIR@
                    OUTPUT_FILE rsa-ff.d3
                    COMMAND_ERROR_IS_FATAL ANY
    )

    # d -> t

    # t -> t

    # p -> t

    message(NOTICE "d -> p")
    execute_process(COMMAND @CMAKE_BINARY_DIR@/apps/openssl rsa -in rsa-f.d -inform d -outform p
                    WORKING_DIRECTORY @CMAKE_CURRENT_BINARY_DIR@
                    OUTPUT_FILE rsa-ff.p1
                    COMMAND_ERROR_IS_FATAL ANY
    )

    # t -> p

    message(NOTICE "p -> p")
    execute_process(COMMAND @CMAKE_BINARY_DIR@/apps/openssl rsa -in rsa-f.p -inform p -outform p
                    WORKING_DIRECTORY @CMAKE_CURRENT_BINARY_DIR@
                    OUTPUT_FILE rsa-ff.p3
                    COMMAND_ERROR_IS_FATAL ANY
    )

    execute_process(COMMAND @CMAKE_COMMAND@ -E compare_files --ignore-eol rsa-fff.p rsa-f.p
                    WORKING_DIRECTORY @CMAKE_CURRENT_BINARY_DIR@
                    COMMAND_ERROR_IS_FATAL ANY
    )

    execute_process(COMMAND @CMAKE_COMMAND@ -E compare_files --ignore-eol rsa-fff.p rsa-ff.p1
                    WORKING_DIRECTORY @CMAKE_CURRENT_BINARY_DIR@
                    COMMAND_ERROR_IS_FATAL ANY
    )

    # rsa-fff.p rsa-ff.p2

    execute_process(COMMAND @CMAKE_COMMAND@ -E compare_files --ignore-eol rsa-fff.p rsa-ff.p3
                    WORKING_DIRECTORY @CMAKE_CURRENT_BINARY_DIR@
                    COMMAND_ERROR_IS_FATAL ANY
    )

    # rsa-f.t rsa-ff.t1

    # rsa-f.t rsa-ff.t2

    # rsa-f.t rsa-ff.t3

    execute_process(COMMAND @CMAKE_COMMAND@ -E compare_files --ignore-eol rsa-f.p rsa-ff.p1
                    WORKING_DIRECTORY @CMAKE_CURRENT_BINARY_DIR@
                    COMMAND_ERROR_IS_FATAL ANY
    )

    # rsa-f.p rsa-ff.p2

    execute_process(COMMAND @CMAKE_COMMAND@ -E compare_files --ignore-eol rsa-f.p rsa-ff.p3
                    WORKING_DIRECTORY @CMAKE_CURRENT_BINARY_DIR@
                    COMMAND_ERROR_IS_FATAL ANY
    )

    execute_process(COMMAND @CMAKE_COMMAND@ -E rm -f rsa-fff.p rsa-f.d rsa-f.p rsa-ff.d1 rsa-ff.d3 rsa-ff.p1 rsa-ff.p3
                    WORKING_DIRECTORY @CMAKE_CURRENT_BINARY_DIR@
    )
endif()
